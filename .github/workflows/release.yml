# Automatically create a new release when triggered manually.
# This workflow handles:
# 1. Removing SNAPSHOT from version
# 2. Building the project
# 3. Creating a GitHub release with the built JAR
# 4. Incrementing version and adding SNAPSHOT suffix

name: release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      
      - name: setup jdk 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'microsoft'
      
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      
      - name: configure git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: prepare release
        run: |
          ./gradlew release -Prelease.useAutomaticVersion=true
      
      - name: build release artifact
        run: ./gradlew build
      
      - name: get release version
        id: get_version
        run: |
          VERSION=$(ls build/libs/mc-coordinates-*.jar | grep -v sources | sed 's/.*mc-coordinates-\(.*\)\.jar/\1/')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      
      - name: create github release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          files: build/libs/mc-coordinates-*.jar
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }} 